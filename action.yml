name: Firely.Terminal (GitHub Actions)
description: Run Firely.Terminal and the offical FHIR Java Validator in a GitHub Actions pipeline

inputs:
  PATH_TO_CONFORMANCE_RESOURCES:
    description: 'Relative paths of the folder(s) containing FHIR Conformance resources (StructureDefinition, ValueSet, CodeSystem)'
    required: true
  PATH_TO_EXAMPLES:
    description: 'Relative paths of the folder(s) containing examples for the FHIR Conformance resources defined by the project'
    required: false

# Validate all resources using Firely Terminal 
runs:
  using: "composite"
  steps:
    
    # Test Firely SDK version
    - name: Check .NET SDK Version
      run: |
        CHECK_DOTNET_VERSION=$(dotnet --version)
        echo "DOTNET_VERSION: $CHECK_DOTNET_VERSION \n\n"
      shell: bash
          
    # Install Firely.Terminal
    - name: Install Firely.Terminal
      run: |
        dotnet tool install --global Firely.Terminal --version $FIRELY_TERMINAL_VERSION > /dev/null
        echo "Successfully installed Firely.Terminal"
      shell: bash
      env:
       FIRELY_TERMINAL_VERSION: 2.0.0
      
    # Test Firely.Terminal install
    - name: Check Firely Terminal Version
      run: |
        CHECK_FIRELY_TERMINAL_VERSION=$(fhir -v)
        echo "FIRELY_TERMINAL_VERSION: $CHECK_FIRELY_TERMINAL_VERSION \n\n"
      shell: bash
          
    # Add conformance resources for validation to the stack
    - name: Add resources to the Firely Terminal stack
      run: |
        for p in $INPUT_PATH_TO_CONFORMANCE_RESOURCES; 
        do 
          echo Accessing "$p" and pushing resources to the stack...
          if [ -d "$GITHUB_WORKSPACE/$p" ]; then
            cd $GITHUB_WORKSPACE/$p
            fhir push .
          else
            echo Cannot access "$p" as the path does not exist
          fi
        done
      shell: bash
      
    # Restore all dependencies listed in the package.json file (need to be on the root level)
    - name: FHIR Dependency restore
      run: |
        FHIR_RESTORE=$(fhir restore)
        echo "Restore of package.json was successfull: $FHIR_RESTORE \n\n"
      shell: bash
    
    # Validate all conformance resources on the stack
    - name: Validate all conformance resources in scope of the repository
      run: | 
        while true; do
          currentResource=$(fhir peek)
          if [[ "$currentResource" == *"The stack is empty."* ]]; then
            echo "Validation was executed for all resources on the stack"
            break
          fi
          echo "Validating $currentResource ..."
            
          result=$(fhir validate)
          echo $result
          if [[ "$result" == *"INVALID"* ]]; then
            exit 1
          fi
            
          fhir pop > /dev/null
        done
      shell: bash
      
     #Examples are currently not used as Firely Terminal can't validate against profiles on the stack right now
